

#include "JZOff.h"
/*我们把只包含因子 2、3 和 5 的数称作丑数（Ugly Number）。求按从小到大的顺序的第 n 个丑数。*/

/*// 一个十分巧妙的动态规划问题
    // 1.我们将前面求得的丑数记录下来，后面的丑数就是前面的丑数*2，*3，*5
    // 2.但是问题来了，我怎么确定已知前面k-1个丑数，我怎么确定第k个丑数呢
    // 3.采取用三个指针的方法，p2,p3,p5
    // 4.p2指向的数字下一次永远*2，p3指向的数字下一次永远*3，p5指向的数字永远*5
    // 5.我们从2*p2, 3*p3, 5*p5选取最小的一个数字，作为第k个丑数
    // 6.如果第K个丑数==2*p2，也就是说前面0-p2个丑数*2不可能产生比第K个丑数更大的丑数了，所以p2++
    // 7.p3,p5同理
    // 8.返回第n个丑数*/


class Solution {
public:
	int nthUglyNumber(int n) {

		vector<int> dp(n, 0);
		int i2 = 0, i3 = 0, i5 = 0;
		dp[0] = 1;
		for (int i = 1; i < n; i++) {

			dp[i] = min(dp[i2] * 2, min(dp[i3] * 3, dp[i5] * 5));

			i2 += (dp[i] == dp[i2] * 2);
			i3 += (dp[i] == dp[i3] * 3);
			i5 += (dp[i] == dp[i5] * 5);
		}
		return dp[n - 1];
	}
};